Práctica 4 Concurrente
Objetivo:
Realizar programas en R-info con distintos tipos de robots. Utilizar memoria compartida para
la comunicación y sincronización entre robots. Combinar problemas con memoria
compartida y pasaje de mensajes. Distinguir modelos de algoritmos a desarrollar de acuerdo
al problema planteado.

1) Clientes y Servidores

Existe un robot que sirve de flores a tres robots clientes. Cada cliente solicita al servidor que
le deposite en su esquina siguiente una cantidad de flores aleatoria (entre 1 y 4). Por
ejemplo, si el cliente se encuentra en la esquina (2,1) le solicitará que coloque x cantidad de
flores en la esquina (2,2).
Cuando el robot servidor deposita las flores en la esquina solicitada, el cliente las junta y las
deposita una a una a lo largo de la avenida en la que se encuentra.
El programa finaliza cuando todos los robos clientes completan su avenida. Asuma que el
robot servidor tiene flores suficientes en su bolsa.

El robot servidor se inicia en la esquina (100,100)
Los robots clientes inician en las esquinas (1,1) , (2,1) y (3,1) respectivamente

Protocolo Cliente/Servidor

Cliente:
INICIO: calcularRandom flores
Enviar ID al servidor
Enviar cantFlores al servidor
Enviar mi Avenida actua
Enviar Calle siguiente
Esperar ACK del servidor
Ir a la esquina Avenida,Calle
JuntarFlores
Volver a la esquina
Avanzar dejando flores
Si llegué a la avenida 100
enviar 0 al servidor
sino
Volver a INICIO

Servidor
INICIO: Recibir ID
Recibir N Flores de ID
si (flores <> 0)
recibir avenida de ID
recibir calle de ID
pos(avenida,calle)
depositar N flores
volver a (100,100)
enviar ACK a robot ID
volver a INICIO
sino
contar un robot terminado
si terminaron los 3 robots
terminar

2) Productores y consumidores

Existen dos robots productores que recorren las avenidas 5 y 10 respectivamente, juntando
todos los papeles de su avenida. A lo largo del recorrido, cada vez que juntan 5 papeles, los
depositan en la esquina (50,50).

Además existen dos robots consumidores que intentan tomar una cantidad aleatoria de
papeles (entre 2 y 5) de la esquina (50,50) para depositarla en su esquina de origen. Si la
esquina (50,50) no posee la cantidad de papeles requerida, vuelven a su esquina de origen
sin tomar ningún papel. Si luego de 8 intentos seguidos detectan que la esquina (50,50) no
tiene papeles suficientes para juntar, entonces asumirán que los productores ya han
completado su trabajo y por lo tanto terminarán su tarea también.

Los consumidores inician en las esquinas (11,1) y (12,1) respectivamente.

3) Sincronización barrera

Tres robots deben vaciar de papeles su avenida, comenzando por la calle 1 y terminando en
la calle 100. El trabajo lo deben realizar todos juntos y en etapas: los robots inician juntos y
cuando todos completan una etapa del trabajo pueden avanzar a la siguiente, lo que
significa que para poder pasar de etapa los robots deben esperar que todos hayan
completado la etapa en curso. Se proponen dos posibles soluciones a este problema:
etapas homogéneas o etapas heterogéneas:

a) Implemente el programa considerando que cada robot completa una etapa cada 5
esquinas

b) Implemente el programa considerando que cada robot completa una etapa luego de
juntar N papeles. El valor de N (entre 1 y 5) lo calcula cada robot antes de iniciar
cada etapa.

En cada solución, analice cómo debería finalizar el programa.
Los robots inician en las esquinas (1,1), (2,1) y (3,1) respectivamente. Existe un robot
coordinador, cuya única tarea es asignar identificadores a cada robot.

4) Jefe y trabajadores - Master/Slave
Un robot jefe asigna tareas a los trabajadores. Las tareas consisten en 1. recoger flores, 2.
recoger papeles, 3. vaciar bolsa, 4. finalizar .
Existen 2 robots trabajadores que reciben solicitudes de tareas del robot jefe. Para cada
solicitud, reciben la tarea y la esquina donde deben realizarla (salvo cuando la tarea es 4
que no deben acceder a una esquina). Luego de recibir la tarea, los robots van a la esquina
indicada, realizan la tarea, avisan al jefe que ya la completaron y quedan a la espera de una
nueva tarea.

El robot jefe inicia en la esquina (1,1) y los robots trabajadores inician en las esquinas (2,1)
y (3,1). Las tareas se asignan aleatoriamente a cualquier esquina dentro del cuadrante
comprendido entre las esquinas (2,2) y (100,100). El robot jefe envía 10 tareas aleatorias a
trabajadores aleatorios y termina.

Analice: existe el riesgo de que el programa quede bloqueado, y que ningún robot
trabajador pueda realizar su tarea. ¿en qué caso puede suceder esto? ¿qué resulta
necesario considerar para evitar esta situación?